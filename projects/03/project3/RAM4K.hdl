// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=true, sel=address[9..11], a=OneEn, b=TwoEn, c=ThreeEn, d=FourEn, e=FiveEn, f=SixEn, g=SevenEn, h=EightEn);

    And(a=load, b=OneEn, out=En1);
    And(a=load, b=TwoEn, out=En2);
    And(a=load, b=ThreeEn, out=En3);
    And(a=load, b=FourEn, out=En4);
    And(a=load, b=FiveEn, out=En5);
    And(a=load, b=SixEn, out=En6);
    And(a=load, b=SevenEn, out=En7);
    And(a=load, b=EightEn, out=En8);

    RAM512(in=in, load=En1, address=address[0..8], out=out1);
    RAM512(in=in, load=En2, address=address[0..8], out=out2);
    RAM512(in=in, load=En3, address=address[0..8], out=out3);
    RAM512(in=in, load=En4, address=address[0..8], out=out4);
    RAM512(in=in, load=En5, address=address[0..8], out=out5);
    RAM512(in=in, load=En6, address=address[0..8], out=out6);
    RAM512(in=in, load=En7, address=address[0..8], out=out7);
    RAM512(in=in, load=En8, address=address[0..8], out=out8);

    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[9..11], out=out);

}