// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    //use demux to select/enable the correct register
    DMux8Way(in=true, sel=address, a=regOneEn, b=regTwoEn, c=regThreeEn, d=regFourEn, e=regFiveEn, f=regSixEn, g=regSevenEn, h=regEightEn);

    //And with load signal so that only the selected register gets updated.
    And(a=load, b=regOneEn, out=En1);
    And(a=load, b=regTwoEn, out=En2);
    And(a=load, b=regThreeEn, out=En3);
    And(a=load, b=regFourEn, out=En4);
    And(a=load, b=regFiveEn, out=En5);
    And(a=load, b=regSixEn, out=En6);
    And(a=load, b=regSevenEn, out=En7);
    And(a=load, b=regEightEn, out=En8);

    Register(in=in, load=En1, out=out1);
    Register(in=in, load=En2, out=out2);
    Register(in=in, load=En3, out=out3);
    Register(in=in, load=En4, out=out4);
    Register(in=in, load=En5, out=out5);
    Register(in=in, load=En6, out=out6);
    Register(in=in, load=En7, out=out7);
    Register(in=in, load=En8, out=out8);

    //use mux to select the output from the correct register
    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address, out=out);

}






















